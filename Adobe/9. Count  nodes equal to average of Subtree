//QUESTION
//https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/description/

//Solution
//https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/solutions/3050194/cpp-solution/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    int sum(TreeNode *root)
    {
        if(root == NULL) return 0;
        return root->val+sum(root->left)+sum(root->right); 
    }
    int len(TreeNode *root)
    {
        if(root == NULL) return 0;
        return 1+len(root->left)+len(root->right);
    }
    void ans(TreeNode *root)
    {
        if(root == NULL) return ;
        averageOfSubtree(root->left);
        averageOfSubtree(root->right);
        int s=sum(root);
        int n=len(root);
        int mid=floor(s/n);
       // cout<<root->val<<" "<<s<<" "<<n<<endl;
        if(mid==root->val)
        {
            //cout<<s<<" "<<n<<endl;
            count++;
        }
    }

    int averageOfSubtree(TreeNode* root) {
        ans(root);

        return count;

        
    }
};
