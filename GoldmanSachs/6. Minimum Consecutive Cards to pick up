class Solution:
    def minimumCardPickup(self, cards: List[int]) -> int:
        d={}
        for i in range(len(cards)):
            if d.get(cards[i]) is None:
                d[cards[i]]=list()
                d[cards[i]].append(i)
            else:
                if len(d[cards[i]])<2:
                    d[cards[i]].append(i)
                    hy=d[cards[i]][1]-d[cards[i]][0]
                    d[cards[i]].append(hy)
                elif d[cards[i]][1]==-1:
                    d[cards[i]][1]=i
                else:
                    gy=i-d[cards[i]][1]
                    if gy<=d[cards[i]][2]:
                        d[cards[i]][0]=d[cards[i]][1]
                        d[cards[i]][1]=i
                        d[cards[i]][2]=gy
                    else:
                        d[cards[i]][0]=i
                        d[cards[i]][1]=-1

        l=d.values()
        mini=1000001
        for i in l:
            if len(i)>2:
                if i[0]==-1 or i[1]==-1:
                    k=1000001
                else:
                    k=i[1]-i[0]
                mini=min(mini,i[2],k)
        if mini==1000001:
            return -1
        else:
            return mini+1
            
            
################################################## Better Approach ###############################

class Solution:
    def minimumCardPickup(self, cards: List[int]) -> int:
        HashMap={}
        lengths=[]
        for i,j in enumerate(cards):
            if j in HashMap:
                lengths.append(abs(HashMap[j]-i)+1)
                HashMap[j]=i
            else:
                HashMap[j]=i
        if len(lengths)>0:
            return min(lengths)
        else:
            return -1


